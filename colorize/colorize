#!/bin/sh

COLORS_FOLDER="$HOME/.colors"
if [ ! -d "$COLORS_FOLDER" ]; then
    echo "Colors folder does not exist...exiting ($COLORS_FOLDER)"
    exit;
fi;

THEMES="$(find "$COLORS_FOLDER" -maxdepth 1 -type d -printf "%f\n" | tail -n +2)"

# prompt the user to select a theme (interactive use fzf, otherwise use rofi)
if [[ -t 0 ]]; then
    THEME="$(echo "$THEMES" | fzf-tmux --prompt='theme: ')"
else
    THEME="$(echo "$THEMES" | rofi -dmenu -i -lines 15 -width 50 $ACTIVE_FLAG -p 'theme: ')"
fi

THEME_FOLDER="$HOME/.colors/$THEME"

if [ -d "$THEME_FOLDER" ]; then
    echo "Using theme folder: $THEME_FOLDER"
else
    echo "Theme folder does not exist...exiting ($THEME_FOLDER)"
    exit;
fi;

# Colorize Emacs
echo "Theming emacs..."
EMACS_COLOR_FILE="$THEME_FOLDER/emacs/emacs.el"
if [ -f "$EMACS_COLOR_FILE" ]; then
    emacsclient --eval "$(cat "$EMACS_COLOR_FILE")"
fi;

# Colorize Alacritty
echo "Theming alacritty..."
ALACRITTY_COLOR_FILE="$THEME_FOLDER/alacritty/alacritty.yml"
ALACRITTY_CONFIG_FILE="$HOME/.config/alacritty/alacritty.yml"
if [ -f "$ALACRITTY_COLOR_FILE" ]; then
    start='^### COLORIZE SECTION START$'
    end='^### COLORIZE SECTION END$'
    sed -i -e "/$start/,/$end/{ /$start/{p; r $ALACRITTY_COLOR_FILE
           }; /$end/p; d }" $ALACRITTY_CONFIG_FILE
    echo "Done theming alacritty"
else
    echo "Failed to theme alacritty. File does not exist: $ALACRITTY_COLOR_FILE"
fi;

# Colorize Tmux
echo "Theming tmux..."
TMUX_COLOR_FILE="$THEME_FOLDER/tmux/.tmux.conf"
if [ -f "$TMUX_COLOR_FILE" ]; then
    tmux source-file $TMUX_COLOR_FILE
    echo "Done theming tmux"
else
    echo "Failed to theme tmux. File does not exist: $TMUX_COLOR_FILE"
fi;


# Colorize Vim
echo "Theming vim..."
VIM_COLOR_FILE="$THEME_FOLDER/vim/init.vim"
VIM_CONFIG_FILE="$HOME/.config/nvim/init.vim"
if [ -f "$VIM_COLOR_FILE" ]; then
    start='^""" COLORIZE SECTION START$'
    end='^""" COLORIZE SECTION END$'
    sed -i -e "/$start/,/$end/{ /$start/{p; r $VIM_COLOR_FILE
           }; /$end/p; d }" $VIM_CONFIG_FILE
    echo "Done theming vim"
else
    echo "Failed to theme vim. File does not exist: $VIM_COLOR_FILE"
fi;

# Colorize Tint2
TINT2_COLOR_FILE="$THEME_FOLDER/tint2/tint2rc"
TINT2_CONFIG_FILE="$HOME/.config/tint2/tint2rc"
if [ -f "$TINT2_COLOR_FILE" ]; then
    start='^### COLORIZE SECTION START$'
    end='^### COLORIZE SECTION END$'
    sed -i -e "/$start/,/$end/{ /$start/{p; r $TINT2_COLOR_FILE
           }; /$end/p; d }" $TINT2_CONFIG_FILE
    killall tint2
    start tint2
    echo "Done theming tint2"
else
    echo "Failed to theme tint2. File does not exist: $TINT2_COLOR_FILE"
fi;


# Colorize Rofi
ROFI_COLOR_FILE="$THEME_FOLDER/rofi/config"
ROFI_CONFIG_FILE="$HOME/.config/rofi/config"
if [ -f "$ROFI_COLOR_FILE" ]; then
    start='^### COLORIZE SECTION START$'
    end='^### COLORIZE SECTION END$'
    sed -i -e "/$start/,/$end/{ /$start/{p; r $ROFI_COLOR_FILE
           }; /$end/p; d }" $ROFI_CONFIG_FILE
    echo "Done theming rofi"
else
    echo "Failed to theme rofi. File does not exist: $ROFI_COLOR_FILE"
fi;

# Colorize GTK Theme
GTK_THEME_COLOR_FILE="$THEME_FOLDER/gtk/theme"
if [ -f "$GTK_THEME_COLOR_FILE" ]; then
    xfconf-query -c xsettings -p /Net/ThemeName -s "$(cat "$GTK_THEME_COLOR_FILE")"
fi;

# Colorize GTK Icons
GTK_ICONS_COLOR_FILE="$THEME_FOLDER/gtk/icons"
if [ -f "$GTK_ICONS_COLOR_FILE" ]; then
    xfconf-query -c xsettings -p /Net/IconThemeName -s "$(cat "$GTK_ICONS_COLOR_FILE")"
fi;

# Colorize Wallpaper
WALLPAPER_COLOR_FILE="$THEME_FOLDER/wallpaper/wallpaper.txt"
if [ -f "$WALLPAPER_COLOR_FILE" ]; then
    set-wallpaper "$(cat "$WALLPAPER_COLOR_FILE")"
fi;

# Colorize Xmobar
echo "Theming xmobar..."
XMOBAR_COLOR_FILE="$THEME_FOLDER/xmobar/xmobarrc"
XMOBAR_CONFIG_FILE="$HOME/.config/xmobar/xmobarrc"
if [ -f "$XMOBAR_COLOR_FILE" ]; then
    cp $XMOBAR_COLOR_FILE $XMOBAR_CONFIG_FILE
    xmonad --restart
    echo "Done theming xmobar"
else
    echo "Failed to theme xmobar. File does not exist: $XMOBAR_COLOR_FILE"
fi;

# Colorize Qutebr5owser
QUTEBROWSER_COLOR_FILE="$THEME_FOLDER/qutebrowser/config.py"
QUTEBROWSER_CONFIG_FILE="$HOME/.config/qutebrowser/config.py"
if [ -f "$QUTEBROWSER_COLOR_FILE" ]; then
    start='^### COLORIZE SECTION START$'
    end='^### COLORIZE SECTION END$'
    sed -i -e "/$start/,/$end/{ /$start/{p; r $QUTEBROWSER_COLOR_FILE
           }; /$end/p; d }" $QUTEBROWSER_CONFIG_FILE
    echo "Done theming qutebrowser"
else
    echo "Failed to theme qutebrowser. File does not exist: $QUTEBROWSER_COLOR_FILE"
fi;
